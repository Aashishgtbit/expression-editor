{"version":3,"sources":["routes/components/ExpressionEditor/defaultMentionStyles.ts","routes/components/Parser/index.ts","routes/components/ExpressionEditor/index.tsx","routes/components/Header/index.tsx","store/actionTypes/index.ts","routes/components/VariableGenerator/index.tsx","store/home/action.ts","routes/Home/index.tsx","routes/index.tsx","store/rootSaga.ts","store/home/reducer.ts","store/combinedReducer.ts","store/index.tsx","containers/AppBootup/index.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultMentionStyles","control","backgroundColor","fontSize","fontWeight","fontFamily","minHeight","highlighter","padding","border","input","display","width","suggestions","list","item","color","validLogicalOperators","Token","text","index","kind","this","test","Parser","dataSet","nextTokenIndex","tokenList","variablesList","otherCharRegex","reToken","RegExp","source","flags","match","exec","push","expr","ParseExpr","length","name","message","token","optoken","ParseMulExpr","NextTokenIs","right","Expression_Add","Expression_Subtract","parseLogicalExpr","Expression_Multiply","Expression_Divide","ParsePowExpr","Expression_Logical","GetNextToken","arg","Expression_Negative","ParseAtom","Expression_Power","arglist","ExpectToken","Expression_Function","Expression_Variable","Expression_Identifier","Expression_Number","validOptionList","indexOf","PeekNextToken","console","log","errorMessage","Expression","precedence","opsymbol","left","PrettyMath","PrettyMath_Binary_LeftAssoc","PrettyMath_Binary_RightAssoc","argtext","textLength","lastIndex","textToBeMatched","substring","variables","isMatched","forEach","isVariablePresent","m","PrettyMath_SingleArg","connect","state","availableVariables","home","props","useState","value","setValue","logicErrorText","setLogicErrorText","highlighterSubString","document","getElementsByClassName","dataSetForLogic","useMemo","data","obj","id","validate","useCallback","parser","Parse","exp","errorTokenData","firstPart","lastPart","finalValue","innerHTML","className","onChange","event","newValue","newPlainTextValue","style","trigger","markup","displayTransform","appendSpaceOnAdd","onClick","type","Header","href","target","rel","ActionTypes","dispatch","addToVariables","variable","payload","variableName","setVariableName","handleSubmit","preventDefault","onSubmit","placeholder","map","Home","routesConfig","path","component","exact","AppRoutes","process","basename","config","render","task","rootSaga","all","homePageInitialState","HomePageReducer","action","newVariable","allReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","logger","run","configureStore","AppBootUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96cfb831.chunk.js","sourcesContent":["export const defaultMentionStyles = {\n  control: {\n    backgroundColor: \"#fff\",\n    fontSize: 14,\n    fontWeight: \"normal\",\n  },\n\n  \"&multiLine\": {\n    control: {\n      fontFamily: \"ABBVoice\",\n      minHeight: 63,\n    },\n    highlighter: {\n      padding: 9,\n      border: \"1px solid transparent\",\n    },\n    input: {\n      padding: 9,\n      border: \"1px solid silver\",\n    },\n  },\n\n  \"&singleLine\": {\n    display: \"inline-block\",\n    width: 180,\n\n    highlighter: {\n      padding: 1,\n      border: \"2px inset transparent\",\n    },\n    input: {\n      padding: 1,\n      border: \"2px inset\",\n    },\n  },\n\n  suggestions: {\n    list: {\n      backgroundColor: \"white\",\n      border: \"1px solid rgba(0,0,0,0.15)\",\n      fontSize: 14,\n    },\n    item: {\n      padding: \"5px 15px\",\n      // borderBottom: \"1px solid rgba(0,0,0,0.15)\",\n      \"&focused\": {\n        backgroundColor: \"#6d28d9\",\n        color: \"#fff\",\n      },\n    },\n  },\n};\n","/* eslint-disable no-throw-literal */\n//  BNF grammar for the expression parser:\n//\n//      expr ::= mulexpr { addop mulexpr }\n//   1  addop ::= \"+\" | \"-\"\n//      mulexpr ::= powexpr { mulop powexpr }\n//   2  mulop ::= \"*\" | \"/\"\n//   3  powexpr ::= \"-\" powexpr | \"+\" powexpr | atom [ \"^\" powexpr ]\n//   4  atom ::= ident [ \"(\" expr \")\" ] | numeric | \"(\" expr \")\"\n//   5  numeric ::= /[0-9]+(\\.[0-9]*)?([eE][\\+\\-]?[0-9]+)?/\n//   6  ident ::= /[A-Za-z_][A-Za-z_0-9]*/\n\nconst validLogicalOperators = [\"&&\", \">\", \"<\", \"<=\", \">=\", \"==\", \"||\", \"!=\"];\n\nexport class Token {\n  private text: string;\n  private index: number;\n  private kind: \"identifier\" | \"number\" | \"operator\" | \"variable\";\n  constructor(text: string, index: number) {\n    this.text = text;\n    this.index = index;\n\n    // Classify the token.\n    if (/^\\$'[A-Za-z_][A-Za-z_0-9]+'/.test(text)) {\n      this.kind = \"variable\";\n    } else if (/^[A-Za-z_]/.test(text)) {\n      this.kind = \"identifier\";\n    } else if (/^[0-9]/.test(text)) {\n      this.kind = \"number\";\n    } else {\n      this.kind = \"operator\";\n    }\n  }\n}\n\nexport class Parser {\n  private nextTokenIndex: any;\n  private tokenList: any;\n  private variablesList: string[];\n  constructor(text: any, dataSet: string[]) {\n    this.variablesList = [...dataSet];\n    this.nextTokenIndex = 0;\n    this.tokenList = [];\n    const numberRegex = /[0-9]+(\\.[0-9]*)?([eE][+-]?[0-9]+)?/;\n    const operatorRegex = /AND|OR|and|or|XOR|&&|<=|>=|<|>|!=|==|&|OR*|!|\\|{1,2}/;\n    const variableRegex = /\\$'[A-Za-z_][A-Za-z_0-9]+'+((\\[([0-9]+)\\])*)?/;\n    const identifierRegex = /[A-Za-z_][A-Za-z_0-9]*/;\n    const otherCharRegex = /\\S/g;\n\n    const reToken = new RegExp(\n      numberRegex.source +\n        \"|\" +\n        operatorRegex.source +\n        \"|\" +\n        variableRegex.source +\n        \"|\" +\n        identifierRegex.source +\n        \"|\" +\n        otherCharRegex.source,\n      otherCharRegex.flags\n    );\n\n    for (;;) {\n      const match = reToken.exec(text);\n      if (match === null) {\n        break;\n      }\n      debugger;\n      this.tokenList.push(new Token(match[0], match.index));\n    }\n  }\n\n  Parse() {\n    const expr = this.ParseExpr();\n    if (this.nextTokenIndex < this.tokenList.length) {\n      throw {\n        name: \"SyntaxError\",\n        message: \"Syntax error\",\n        token: this.tokenList[this.nextTokenIndex],\n      };\n    }\n    return expr;\n  }\n\n  ParseExpr() {\n    // expr ::= mulexpr { addop mulexpr }\n    let expr: any = this.ParseMulExpr();\n    let optoken;\n    while ((optoken = this.NextTokenIs([\"+\", \"-\"]))) {\n      const right = this.ParseMulExpr();\n      if (optoken.text === \"+\") {\n        expr = new Expression_Add(optoken, expr, right);\n      } else {\n        expr = new Expression_Subtract(optoken, expr, right);\n      }\n    }\n    return expr;\n  }\n\n  ParseMulExpr() {\n    // mulexpr ::= powexpr { mulop powexpr }\n    let expr = this.parseLogicalExpr();\n    let optoken;\n    while ((optoken = this.NextTokenIs([\"*\", \"/\"]))) {\n      const right = this.parseLogicalExpr();\n      if (optoken.text === \"*\") {\n        expr = new Expression_Multiply(optoken, expr, right);\n      } else {\n        expr = new Expression_Divide(optoken, expr, right);\n      }\n    }\n    return expr;\n  }\n\n  parseLogicalExpr() {\n    let expr = this.ParsePowExpr();\n    let optoken;\n    while ((optoken = this.NextTokenIs([...validLogicalOperators]))) {\n      const right: any = this.parseLogicalExpr();\n\n      expr = new Expression_Logical(optoken, expr, right);\n    }\n    return expr;\n  }\n\n  ParsePowExpr() {\n    // powexpr ::= \"-\" powexpr | \"+\" powexpr | atom [ \"^\" powexpr ]\n\n    // Eliminate any leading unary '+' operators, because they don't do anything.\n    while (this.NextTokenIs([\"+\"])) {\n      // do nothing\n    }\n\n    let optoken;\n    if ((optoken = this.NextTokenIs([\"-\"]))) {\n      const optoken = this.GetNextToken();\n      const arg: any = this.ParsePowExpr();\n      return new Expression_Negative(optoken, arg);\n    }\n\n    let expr = this.ParseAtom();\n    if ((optoken = this.NextTokenIs([\"^\"]))) {\n      const right: any = this.ParsePowExpr(); // use recursion for right-associative ^ operator\n      return new Expression_Power(optoken, expr, right);\n    }\n\n    return expr;\n  }\n\n  ParseAtom() {\n    // atom ::= ident [ \"(\" expr \")\" ] | numeric | \"(\" expr \")\"\n    const token = this.GetNextToken();\n    if (token.kind === \"variable\") {\n      if (this.NextTokenIs([\"(\"])) {\n        const arglist = [this.ParseExpr()];\n        this.ExpectToken(\")\");\n        return new Expression_Function(token, arglist);\n      }\n      return new Expression_Variable(token, this.variablesList);\n    }\n    if (token.kind === \"identifier\") {\n      if (this.NextTokenIs([\"(\"])) {\n        const arglist = [this.ParseExpr()];\n        this.ExpectToken(\")\");\n        return new Expression_Function(token, arglist);\n      }\n      return new Expression_Identifier(token);\n    }\n\n    if (token.kind === \"number\") {\n      return new Expression_Number(token);\n    }\n\n    if (token.text === \"(\") {\n      const expr = this.ParseExpr();\n      this.ExpectToken(\")\");\n      return expr;\n    }\n\n    throw {\n      name: \"SyntaxError\",\n      message:\n        \"Expected identifier, number, function, or parenthesized expression.\",\n      token: token,\n    };\n  }\n\n  PeekNextToken() {\n    if (this.nextTokenIndex < this.tokenList.length) {\n      return this.tokenList[this.nextTokenIndex];\n    }\n    return null;\n  }\n\n  GetNextToken() {\n    if (this.nextTokenIndex < this.tokenList.length) {\n      return this.tokenList[this.nextTokenIndex++];\n    }\n    const errorMessage =\n      this.tokenList.length !== 0\n        ? \"Unexpected end of expression\"\n        : \"Logic Value cannot be left empty.\";\n    throw {\n      name: \"SyntaxError\",\n      message: errorMessage,\n      token: null,\n    };\n  }\n\n  NextTokenIs(validOptionList: any) {\n    if (this.nextTokenIndex < this.tokenList.length) {\n      const text = this.tokenList[this.nextTokenIndex].text;\n      if (validOptionList.indexOf(text) >= 0) {\n        return this.tokenList[this.nextTokenIndex++];\n      }\n    }\n    return null;\n  }\n\n  ExpectToken(text: any) {\n    const token = this.PeekNextToken();\n    if (token === null || token.text !== text) {\n      console.log(\"token :\", token, text);\n\n      let errorMessage = \"Syntax error\";\n      if (token == null) {\n        errorMessage = 'Expected \"' + text + '\"';\n      }\n      throw {\n        name: \"SyntaxError\",\n        message: errorMessage,\n        token: token,\n      };\n    }\n    return this.tokenList[this.nextTokenIndex++];\n  }\n}\n\nexport class Expression {\n  public precedence: any;\n  public optoken: any;\n  public arglist: any;\n  constructor(precedence: any, optoken: any, arglist: any) {\n    this.precedence = precedence;\n    this.optoken = optoken;\n    this.arglist = arglist;\n  }\n\n  PrettyMath() {\n    throw {\n      name: \"InternalError\",\n      message: \"Do not know how to convert expression to TeX.\",\n      token: this.optoken,\n    };\n  }\n\n  PrettyMath_Binary_LeftAssoc(opsymbol?: any) {\n    let left = this.arglist[0].PrettyMath();\n    let right = this.arglist[1].PrettyMath();\n\n    // Use parentheses around the left child expression\n    // if its operator precedence is less than this node's precedence.\n    // If it is equal, assume left-associativity means parentheses are not needed.\n    if (this.arglist[0].precedence < this.precedence) {\n      left = \"\\\\left(\" + left + \"\\\\right)\";\n    }\n\n    // Use parentheses around the right child expression\n    // if operator precedence is lower or equal.\n    // Even if equal, parentheses are needed because we are\n    // overriding left-associativity.\n    if (this.arglist[1].precedence <= this.precedence) {\n      right = \"\\\\left(\" + right + \"\\\\right)\";\n    }\n\n    return left + (opsymbol || this.optoken.text) + right;\n  }\n\n  PrettyMath_Binary_RightAssoc() {\n    // Similar to left associative, only we use\n    // parentheses when the left child expression\n    // has equal precedence, not the right.\n\n    let left = this.arglist[0].PrettyMath();\n    let right = this.arglist[1].PrettyMath();\n\n    if (this.arglist[0].precedence <= this.precedence) {\n      left = \"\\\\left(\" + left + \"\\\\right)\";\n    }\n\n    if (this.arglist[1].precedence < this.precedence) {\n      right = \"\\\\left(\" + right + \"\\\\right)\";\n    } else {\n      right = \"{\" + right + \"}\"; // for exponentiation\n    }\n\n    return left + this.optoken.text + right;\n  }\n\n  PrettyMath_SingleArg() {\n    if (this.arglist.length !== 1) {\n      throw {\n        name: \"FormatError\",\n        message: `The function \"${this.optoken.text}\" requires exactly one argument.`,\n        token: this.optoken,\n      };\n    }\n    return this.arglist[0].PrettyMath();\n  }\n}\n\nexport class Expression_Add extends Expression {\n  constructor(optoken: any, left: any, right: any) {\n    super(1, optoken, [left, right]);\n  }\n\n  PrettyMath() {\n    return this.PrettyMath_Binary_LeftAssoc();\n  }\n}\n\nexport class Expression_Subtract extends Expression {\n  constructor(optoken: any, left: any, right: any) {\n    super(1, optoken, [left, right]);\n  }\n\n  PrettyMath() {\n    return this.PrettyMath_Binary_LeftAssoc();\n  }\n}\n\nexport class Expression_Multiply extends Expression {\n  constructor(optoken: any, left: any, right: any) {\n    super(2, optoken, [left, right]);\n  }\n\n  PrettyMath() {\n    return this.PrettyMath_Binary_LeftAssoc(\" \");\n  }\n}\n\nexport class Expression_Divide extends Expression {\n  constructor(optoken: any, left: any, right: any) {\n    super(2, optoken, [left, right]);\n  }\n\n  PrettyMath() {\n    // Use fraction notation. Operator precedence is irrelevant.\n    return (\n      \"\\\\frac{\" +\n      this.arglist[0].PrettyMath() +\n      \"}{\" +\n      this.arglist[1].PrettyMath() +\n      \"}\"\n    );\n  }\n}\n\nexport class Expression_Logical_And extends Expression {\n  constructor(optoken: any, left: any, right: any) {\n    super(2, optoken, [left, right]);\n  }\n\n  PrettyMath() {\n    return this.PrettyMath_Binary_LeftAssoc();\n  }\n}\n\nexport class Expression_Logical extends Expression {\n  constructor(optoken: any, left: any, right: any) {\n    super(2, optoken, [left, right]);\n  }\n\n  PrettyMath() {\n    return this.PrettyMath_Binary_LeftAssoc();\n  }\n}\nexport class Expression_Power extends Expression {\n  constructor(optoken: any, left: any, right: any) {\n    super(4, optoken, [left, right]);\n  }\n\n  PrettyMath() {\n    return this.PrettyMath_Binary_RightAssoc();\n  }\n}\nexport class Expression_Negative extends Expression {\n  constructor(optoken: any, arg: any) {\n    super(3, optoken, [arg]);\n  }\n\n  PrettyMath() {\n    // Unary prefix operator.\n    let argtext = this.arglist[0].PrettyMath();\n    if (this.arglist[0].precedence < this.precedence) {\n      return \"-\\\\left(\" + argtext + \"\\\\right)\";\n    }\n    return \"-\" + argtext;\n  }\n}\n\nfunction isVariablePresent(variables: string[], textToBeMatched: string) {\n  let isMatched = false;\n  variables.forEach((item) => {\n    if (`$'${item}'` === textToBeMatched) {\n      isMatched = true;\n    }\n  });\n  debugger;\n  return isMatched;\n}\n\nexport class Expression_Variable extends Expression {\n  private variablesList: string[];\n  constructor(token: any, variablesList: string[]) {\n    super(9, token, []);\n    this.variablesList = [...variablesList];\n  }\n\n  PrettyMath() {\n    // Any identifier that is a single Latin letter is already valid TeX.\n    const textLength = this.optoken.text.length;\n    let lastIndex = this.optoken.text.indexOf(\"[\");\n    if (lastIndex === -1) {\n      lastIndex = textLength;\n    }\n    const textToBeMatched = this.optoken.text.substring(0, lastIndex);\n    if (\n      /^\\$'[A-Za-z_][A-Za-z_0-9]+'+((\\[([0-9]+)\\])*)?$/.test(\n        this.optoken.text\n      ) &&\n      isVariablePresent(this.variablesList, textToBeMatched)\n    )\n      return this.optoken.text;\n\n    // Multi-character identifiers must be a lowercase Greek\n    // letter (e.g. alpha) or an uppercase Greek letter (e.g. Alpha).\n    // In that case, the TeX string is \\alpha or \\Alpha.\n    // if (GreekLetters[this.optoken.text]) return \"\\\\\" + this.optoken.text;\n\n    // Anything other than Latin or Greek letters is an error.\n    throw {\n      name: \"FormatError\",\n      message: `The variable ${this.optoken.text} is not valid. Must be a valid input name .`,\n      token: this.optoken,\n    };\n  }\n}\nexport class Expression_Identifier extends Expression {\n  constructor(token: any) {\n    super(9, token, []);\n  }\n\n  PrettyMath() {\n    // Any identifier that is a single Latin letter is already valid TeX.\n    if (/^[A-Za-z_][A-Za-z_0-9]*$/.test(this.optoken.text))\n      return this.optoken.text;\n\n    // Multi-character identifiers must be a lowercase Greek\n    // letter (e.g. alpha) or an uppercase Greek letter (e.g. Alpha).\n    // In that case, the TeX string is \\alpha or \\Alpha.\n    // if (GreekLetters[this.optoken.text]) return \"\\\\\" + this.optoken.text;\n\n    // Anything other than Latin or Greek letters is an error.\n    throw {\n      name: \"FormatError\",\n      message: `The identifier ${this.optoken.text} is not valid. Must be a Latin letter or the name of a Greek letter.`,\n      token: this.optoken,\n    };\n  }\n}\n\nexport class Expression_Number extends Expression {\n  constructor(token: any) {\n    super(9, token, []);\n  }\n\n  PrettyMath() {\n    const m = this.optoken.text.match(/^([^eE]+)[eE](.*)$/);\n    if (m) {\n      // Convert scientific notation:  1.23e-4 ==> 1.23 \\times 10^{-4}\n      return m[1] + \" \\\\times 10^{\" + m[2] + \"}\";\n    }\n    return this.optoken.text;\n  }\n}\n\nexport class Expression_Function extends Expression {\n  constructor(token: any, arglist: any) {\n    super(9, token, arglist);\n  }\n\n  PrettyMath() {\n    switch (this.optoken.text) {\n      case \"sqrt\":\n        return \"\\\\sqrt{\" + this.PrettyMath_SingleArg() + \"}\";\n\n      case \"abs\":\n        return \"\\\\left|\" + this.PrettyMath_SingleArg() + \"\\\\right|\";\n\n      case \"cos\":\n      case \"sin\":\n        return (\n          \"\\\\\" +\n          this.optoken.text +\n          \"\\\\left(\" +\n          this.PrettyMath_SingleArg() +\n          \"\\\\right)\"\n        );\n\n      default:\n        throw {\n          name: \"FormatError\",\n          message: 'Unknown function \"' + this.optoken.text + '\"',\n          token: this.optoken,\n        };\n    }\n  }\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Mention, MentionsInput } from \"react-mentions\";\nimport { defaultMentionStyles } from \"./defaultMentionStyles\";\nimport \"./style.scss\";\nimport { Parser } from \"../Parser\";\nimport { connect } from \"react-redux\";\nimport { StoreState } from \"../../../store\";\ninterface ExpressionEditorProps {}\n\nconst ExpressionEditor = (\n  props: ExpressionEditorProps & ReturnType<typeof mapStateToProps>\n) => {\n  const [value, setValue] = useState(\"\");\n  const [logicErrorText, setLogicErrorText] = useState(\"\");\n  const hanldeAreaInputValue = (val: any) => {\n    setValue(val);\n  };\n\n  const highlighterSubString = document.getElementsByClassName(\n    \"customMentionInput__highlighter__substring\"\n  );\n\n  const dataSetForLogic = useMemo(() => {\n    let data: any = [];\n    props.availableVariables.forEach((item: string) => {\n      let obj = { id: item, display: item };\n      data.push(obj);\n    });\n    return data;\n  }, [props.availableVariables]);\n\n  const validate = useCallback(() => {\n    const parser = new Parser(value, props.availableVariables);\n    try {\n      const expr = parser.Parse();\n      const pretty = expr.PrettyMath();\n      console.log(\"expr :\", expr);\n\n      setLogicErrorText(\"\");\n    } catch (exp) {\n      console.log(\"exp :\", exp);\n\n      const errorTokenData = exp.token;\n      if (errorTokenData && highlighterSubString.length > 0) {\n        const firstPart = value.substring(0, errorTokenData.index);\n        const lastPart = value.substring(\n          errorTokenData.index,\n          errorTokenData.index + errorTokenData.text.length + 1\n        );\n\n        const finalValue = `${firstPart}<span style=\"text-decoration:underline; text-decoration-color:red;text-decoration-style: wavy; background-color: rgba(255,0,0,0.2);\" >${errorTokenData.text}</span>${lastPart}  `;\n\n        highlighterSubString[0].innerHTML = finalValue;\n      }\n\n      setLogicErrorText(exp.message);\n    }\n  }, [highlighterSubString, value, props.availableVariables]);\n\n  return (\n    <>\n      <div className=\"wrapper-expression-input\">\n        <MentionsInput\n          className=\"customMentionInput\"\n          id=\"logicTextArea\"\n          value={value}\n          onChange={(\n            event: { target: { value: string } },\n            newValue: string,\n            newPlainTextValue: string\n          ) => {\n            hanldeAreaInputValue(newPlainTextValue);\n          }}\n          style={defaultMentionStyles}\n        >\n          <Mention\n            trigger={/(?:^|)(\\$([^\\s$]*))$/} // with space = /(?:^|\\s)(\\$([^\\s\\$]*))$/\n            markup={`$[____display____]`}\n            data={dataSetForLogic}\n            displayTransform={(id, display) => `$'${display}'`}\n            appendSpaceOnAdd={true}\n          />\n        </MentionsInput>\n      </div>\n      <div className=\" h-8 mt-4 flex  text-red-700 \">{logicErrorText}</div>\n      <div className=\"flex-auto flex space-x-3\">\n        <button\n          onClick={validate}\n          className=\"focus:border-purple-500 focus:ring-1 focus:ring-purple-500 focus:outline-none w-32 h-8 mt-4 flex items-center justify-center rounded-full bg-purple-700 text-white\"\n          type=\"submit\"\n        >\n          Set\n        </button>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    availableVariables: state.home.availableVariables,\n  };\n};\n\nexport default connect(mapStateToProps)(ExpressionEditor);\n","import React from \"react\";\n\ninterface HeaderProps {}\nconst Header = (props: HeaderProps) => {\n  return (\n    <div className=\"sticky top-0 p-4 z-40 lg:z-50 w-full max-w-8xl mx-auto bg-purple-700 flex-none flex \">\n      <div className=\"flex-none pl-4 sm:pl-6 xl:pl-8 flex items-center  lg:border-b-0 lg:w-60 xl:w-72 text-white text-xl\">\n        Expression Editor\n      </div>\n      <div className=\" flex-1  text-white  h-18 flex items-center justify-between px-4 sm:px-6 lg:mx-6 lg:px-0 xl:mx-8\">\n        {\" \"}\n        <div className=\"ml-auto\">\n          <a\n            href=\"https://github.com/Aashishgtbit/expression-editor\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Github\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","export const ActionTypes = <const>{\n  ADD_TO_AVAILABLE_VARIABLES: \"ADD_TO_AVAILABLE_VARIABLES\",\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { StoreState } from \"../../../store\";\nimport { addToAvailableVariables } from \"../../../store/home/action\";\n\nconst VariableGenerator = (\n  props: ReturnType<typeof mapStateToProps> &\n    ReturnType<typeof mapDispatchToProps>\n) => {\n  const [variableName, setVariableName] = useState(\"\");\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setVariableName(value);\n  };\n  const handleSubmit = (\n    event:\n      | React.FormEvent<HTMLFormElement>\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    props.addToVariables(variableName);\n    setVariableName(\"\");\n  };\n  return (\n    <div className=\"\">\n      <div className=\"text-l  font-bold\">Variable Generator</div>\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\" pl-2 focus:border-purple-500  ring-1 ring-purple-700 focus:ring-2 focus:ring-purple-500 focus:outline-none rounded   h-8 mt-4  items-center justify-center \"\n          type=\"text\"\n          value={variableName}\n          placeholder=\"Enter varaible name\"\n          onChange={handleOnChange}\n        />\n        <button\n          onClick={handleSubmit}\n          className=\"focus:border-purple-500  ml-5 focus:ring-1 focus:ring-purple-500 focus:outline-none w-16 h-8 mt-4  items-center justify-center rounded-full bg-purple-700 text-white\"\n        >\n          Add\n        </button>\n      </form>\n\n      <div className=\"mt-4\">\n        <div className=\"text-l  font-bold\">Available Variables</div>\n        <ul>\n          {props.availableVariables.length ? (\n            props.availableVariables.map((item) => {\n              return <li>{item}</li>;\n            })\n          ) : (\n            <li>No Variables Found! </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    availableVariables: state.home.availableVariables,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    addToVariables: (variable: string) => {\n      dispatch(addToAvailableVariables(variable));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VariableGenerator);\n","import { ActionTypes } from \"../actionTypes\";\n\nexport const addToAvailableVariables = (item: string) => {\n  return <const>{\n    type: ActionTypes.ADD_TO_AVAILABLE_VARIABLES,\n    payload: item,\n  };\n};\n","import React from \"react\";\nimport ExpressionEditor from \"../components/ExpressionEditor\";\nimport Header from \"../components/Header\";\nimport VariableGenerator from \"../components/VariableGenerator\";\nimport \"./style.scss\";\ninterface HomeProps {}\nfunction Home(props: HomeProps) {\n  return (\n    <div className=\"wrapper-home-screen\">\n      <Header />\n      <div className=\" flex-1 flex mx-auto flex-row pt-20  items-center ali md:container md:mx-auto  max-w-sm min-w-max \">\n        <div className=\" h-full flex-1 flex mx-auto flex-col   ali md:container md:mx-auto  max-w-sm min-w-max\">\n          <ExpressionEditor />\n        </div>\n        <div className=\" h-full flex-1 flex mx-auto flex-col  items-center ali md:container md:mx-auto  max-w-sm min-w-max\">\n          <VariableGenerator />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  RouteComponentProps,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nimport Home from \"./Home\";\n\nconst routesConfig = [\n  {\n    path: \"/\",\n    component: Home,\n    name: \"Home\",\n    exact: true,\n  },\n];\n\nconst AppRoutes = () => {\n  console.log(process.env);\n  return (\n    <Router basename={process.env.REACT_APP_PUBLIC_URL}>\n      <Switch>\n        {routesConfig.map((config) => {\n          return (\n            <Route\n              exact={config.exact || true}\n              key={`${config.name}`}\n              path={config.path}\n              render={(props: RouteComponentProps) => {\n                return <config.component {...props} />;\n              }}\n            />\n          );\n        })}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRoutes;\n","import { all, fork, ForkEffect, takeLatest } from \"redux-saga/effects\";\n\nconst task: ForkEffect<never>[] = [];\n\nconst rootSaga = function* rootSaga() {\n  yield all(task);\n};\n\nexport default rootSaga;\n","import { ActionTypes } from \"../actionTypes\";\nimport { HomePageAction, HomePageState } from \"./type\";\n\nconst homePageInitialState: HomePageState = {\n  availableVariables: [],\n};\n\nconst HomePageReducer = (\n  state: HomePageState = homePageInitialState,\n  action: HomePageAction\n): HomePageState => {\n  switch (action.type) {\n    case ActionTypes.ADD_TO_AVAILABLE_VARIABLES: {\n      const newVariable = action.payload;\n      const availableVariables = [...state.availableVariables, newVariable];\n      return {\n        ...state,\n        availableVariables,\n      };\n    }\n    default: {\n      return { ...state };\n    }\n  }\n};\n\nexport default HomePageReducer;\n","import { combineReducers } from \"redux\";\nimport HomePageReducer from \"./home/reducer\";\n\nconst allReducer = combineReducers({\n  home: HomePageReducer,\n});\n\nexport default allReducer;\n","import logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { applyMiddleware, createStore } from \"redux\";\n\nimport rootSaga from \"./rootSaga\";\nimport reducers from \"./combinedReducer\";\nimport { HomePageState } from \"./home/type\";\n\nconst middlewares = [];\nif (process.env.NODE_ENV === `development`) {\n  middlewares.push(logger);\n}\n\nexport interface StoreState {\n  home: HomePageState;\n}\n\nconst sagaMiddleware = createSagaMiddleware();\n\nmiddlewares.push(sagaMiddleware);\n\nconst store = () => {\n  let store = createStore(reducers, applyMiddleware(logger, sagaMiddleware));\n  sagaMiddleware.run(rootSaga);\n  return { store };\n};\n\nexport default store;\n","import React from \"react\";\nimport AppRoutes from \"../../routes\";\nimport configureStore from \"../../store/index\";\nimport { Provider } from \"react-redux\";\nconst { store } = configureStore();\nfunction AppBootUp() {\n  return (\n    <Provider store={store}>\n      <AppRoutes />\n    </Provider>\n  );\n}\n\nexport default AppBootUp;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppBootUp from \"./containers/AppBootup\";\nimport \"./index.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppBootUp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}